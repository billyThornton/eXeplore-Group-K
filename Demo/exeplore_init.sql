DROP TABLE location;
DROP TABLE office;
DROP TABLE route;
DROP TABLE tutor;
DROP TABLE team;
DROP TABLE student;
DROP TABLE score;
DROP TABLE student_password;
DROP TABLE tutor_password;
DROP TABLE question;
DROP TABLE route_location_bridge;


CREATE TABLE location (
	location_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	location_name VARCHAR(100),
	location_image_url VARCHAR(255),
	clue VARCHAR(1000),
	PRIMARY KEY(location_id)
);

CREATE TABLE office (
	office_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	location_id INT NOT NULL,
	office_name VARCHAR(100),
	PRIMARY KEY(office_id),
	FOREIGN KEY(location_id)
		REFERENCES location(location_id)
		ON UPDATE NO ACTION
		ON DELETE CASCADE
);

CREATE TABLE question(
	question_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	location_id INT NOT NULL,
	question_content VARCHAR(1000) NOT NULL,
	multiple_choice_a VARCHAR(1000) NOT NULL,
	multiple_choice_b VARCHAR(1000) NOT NULL,
	multiple_choice_c VARCHAR(1000) NOT NULL,
	multiple_choice_d VARCHAR(1000) NOT NULL,
	answer CHAR(2) NOT NULL,
	PRIMARY KEY(question_id),
	FOREIGN KEY(location_id)
		REFERENCES location(location_id)
		ON UPDATE NO ACTION
		ON DELETE CASCADE
);

CREATE TABLE tutor (
  tutor_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  office_id INT,
  tutor_name VARCHAR(45) NOT NULL,
  email VARCHAR(45) NOT NULL,
    verified boolean not null,
  PRIMARY KEY(tutor_id),
  FOREIGN KEY(office_id)
  	REFERENCES office(office_id)
  	ON UPDATE NO ACTION
  	ON DELETE CASCADE
);

CREATE TABLE route_location_bridge(
	route_id INT NOT NULL,
	location_id INT NOT NULL,
	sequence_order INT NOT NULL,
	question_id INT,
	PRIMARY KEY(route_id, location_id, sequence_order),		
	FOREIGN KEY(location_id)
		REFERENCES location(location_id)
		ON UPDATE NO ACTION
		ON DELETE CASCADE,
	FOREIGN KEY(question_id)
		REFERENCES question(question_id)
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);

CREATE TABLE route(
	route_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	route_name VARCHAR(255),
	PRIMARY KEY (route_id)
);

CREATE TABLE team(
  team_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  team_name VARCHAR(225) NOT NULL,
  current_route_id INT,
  tutor_id INT NOT NULL,
  team_leader INT,
  progress int,
  PRIMARY KEY (team_id),
  FOREIGN KEY (tutor_id)
   	REFERENCES tutor(tutor_id)
   	ON UPDATE NO ACTION
   	ON DELETE CASCADE,
  FOREIGN KEY (current_route_id)
  	REFERENCES route(route_id)
  	ON UPDATE NO ACTION
  	ON DELETE NO ACTION
);

CREATE TABLE student (
  student_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(45) NOT NULL,
  email VARCHAR(45) NOT NULL,
  team_id INT,
  tutor_id INT NOT NULL,
  verified boolean not null,
  PRIMARY KEY (student_id),
  FOREIGN KEY (tutor_id)
    REFERENCES tutor (tutor_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  FOREIGN KEY (team_id)
    REFERENCES team(team_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);

CREATE TABLE score(
	score_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	route_id INT NOT NULL,
	route_name VARCHAR(255) NOT NULL,
	team_id INT NOT NULL,
	value INT NOT NULL,
	PRIMARY KEY(score_id),
	FOREIGN KEY(team_id)
		REFERENCES team(team_id)
		ON UPDATE NO ACTION
		ON DELETE CASCADE
);

CREATE TABLE student_password (
  password_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  student_id INT NOT NULL,
  password VARCHAR(255) NOT NULL,
  pepper VARCHAR(25) NOT NULL,
  PRIMARY KEY (password_id),
  FOREIGN KEY (student_id)
    REFERENCES student (student_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);

CREATE TABLE tutor_password (
  password_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  tutor_id INT NOT NULL,
  password VARCHAR(255) NOT NULL,
  pepper VARCHAR(25) NOT NULL,
  PRIMARY KEY (password_id),
  FOREIGN KEY (tutor_id)
    REFERENCES tutor (tutor_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE
);
